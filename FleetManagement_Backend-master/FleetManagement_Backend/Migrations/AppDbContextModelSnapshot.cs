// <auto-generated />
using System;
using FleetManagement_Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FleetManagement_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FleetManagement_Backend.Models.AddOn", b =>
                {
                    b.Property<int>("AddOnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddOnId"));

                    b.Property<string>("AddOnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AddOnRate")
                        .HasColumnType("float");

                    b.HasKey("AddOnId");

                    b.ToTable("AddOn");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportId"));

                    b.Property<int?>("AirportCode")
                        .HasColumnType("int");

                    b.Property<string>("AirportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirportId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("AadharNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("BookingDateAndTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("DLNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DropHubId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PickupHubId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarNumberplate")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HubId")
                        .HasColumnType("int");

                    b.Property<double?>("Milage")
                        .HasColumnType("float");

                    b.HasKey("CarId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HubId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.CarCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DailyRates")
                        .HasColumnType("float");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MonthlyRates")
                        .HasColumnType("float");

                    b.Property<double?>("WeeklyRates")
                        .HasColumnType("float");

                    b.HasKey("CategoryId");

                    b.ToTable("CarCategory");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Hubs", b =>
                {
                    b.Property<int>("HubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HubId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AirportId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HubId");

                    b.HasIndex("AirportId");

                    b.HasIndex("CityId");

                    b.ToTable("Hubs");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.State", b =>
                {
                    b.Property<int?>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("StateId"));

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<long?>("AadharNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("DlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HubId")
                        .HasColumnType("int");

                    b.Property<int?>("IsEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IsRegisteredUser")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PassportNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.HasIndex("HubId");

                    b.HasIndex("StateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Booking", b =>
                {
                    b.HasOne("FleetManagement_Backend.Models.CarCategory", "CarCategory")
                        .WithMany("Bookings")
                        .HasForeignKey("CategoryId");

                    b.HasOne("FleetManagement_Backend.Models.City", "City")
                        .WithMany("Bookings")
                        .HasForeignKey("CityId");

                    b.HasOne("FleetManagement_Backend.Models.State", "State")
                        .WithMany("Bookings")
                        .HasForeignKey("StateId");

                    b.Navigation("CarCategory");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Car", b =>
                {
                    b.HasOne("FleetManagement_Backend.Models.CarCategory", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId");

                    b.HasOne("FleetManagement_Backend.Models.Hubs", "Hub")
                        .WithMany("Cars")
                        .HasForeignKey("HubId");

                    b.Navigation("Category");

                    b.Navigation("Hub");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.City", b =>
                {
                    b.HasOne("FleetManagement_Backend.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Hubs", b =>
                {
                    b.HasOne("FleetManagement_Backend.Models.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId");

                    b.HasOne("FleetManagement_Backend.Models.City", "City")
                        .WithMany("Hubs")
                        .HasForeignKey("CityId");

                    b.Navigation("Airport");

                    b.Navigation("City");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Users", b =>
                {
                    b.HasOne("FleetManagement_Backend.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleetManagement_Backend.Models.Hubs", "Hubs")
                        .WithMany("Users")
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleetManagement_Backend.Models.State", "State")
                        .WithMany("Users")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Hubs");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.CarCategory", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.City", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Hubs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.Hubs", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FleetManagement_Backend.Models.State", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Cities");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
